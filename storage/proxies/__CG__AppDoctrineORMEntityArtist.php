<?php

namespace DoctrineProxies\__CG__\App\Doctrine\ORM\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Artist extends \App\Doctrine\ORM\Entity\Artist implements \Doctrine\ORM\Proxy\InternalProxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as private;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
    }

    public function __load(): void
    {
        $this->initializeLazyObject();
    }
    

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'abbrev' => [parent::class, 'abbrev', null],
        "\0".parent::class."\0".'archive_key' => [parent::class, 'archive_key', null],
        "\0".parent::class."\0".'artistToArtistGroups' => [parent::class, 'artistToArtistGroups', null],
        "\0".parent::class."\0".'artistuserid' => [parent::class, 'artistuserid', null],
        "\0".parent::class."\0".'createdAt' => [parent::class, 'createdAt', null],
        "\0".parent::class."\0".'creators' => [parent::class, 'creators', null],
        "\0".parent::class."\0".'fanUrl' => [parent::class, 'fanUrl', null],
        "\0".parent::class."\0".'icon' => [parent::class, 'icon', null],
        "\0".parent::class."\0".'id' => [parent::class, 'id', null],
        "\0".parent::class."\0".'isTradable' => [parent::class, 'isTradable', null],
        "\0".parent::class."\0".'name' => [parent::class, 'name', null],
        "\0".parent::class."\0".'nameFirstLetter' => [parent::class, 'nameFirstLetter', null],
        "\0".parent::class."\0".'nameNormalized' => [parent::class, 'nameNormalized', null],
        "\0".parent::class."\0".'notes' => [parent::class, 'notes', null],
        "\0".parent::class."\0".'officialUrl' => [parent::class, 'officialUrl', null],
        "\0".parent::class."\0".'performances' => [parent::class, 'performances', null],
        "\0".parent::class."\0".'ref_shnartist' => [parent::class, 'ref_shnartist', null],
        "\0".parent::class."\0".'top100' => [parent::class, 'top100', null],
        "\0".parent::class."\0".'user' => [parent::class, 'user', null],
        'abbrev' => [parent::class, 'abbrev', null],
        'archive_key' => [parent::class, 'archive_key', null],
        'artistToArtistGroups' => [parent::class, 'artistToArtistGroups', null],
        'artistuserid' => [parent::class, 'artistuserid', null],
        'createdAt' => [parent::class, 'createdAt', null],
        'creators' => [parent::class, 'creators', null],
        'fanUrl' => [parent::class, 'fanUrl', null],
        'icon' => [parent::class, 'icon', null],
        'id' => [parent::class, 'id', null],
        'isTradable' => [parent::class, 'isTradable', null],
        'name' => [parent::class, 'name', null],
        'nameFirstLetter' => [parent::class, 'nameFirstLetter', null],
        'nameNormalized' => [parent::class, 'nameNormalized', null],
        'notes' => [parent::class, 'notes', null],
        'officialUrl' => [parent::class, 'officialUrl', null],
        'performances' => [parent::class, 'performances', null],
        'ref_shnartist' => [parent::class, 'ref_shnartist', null],
        'top100' => [parent::class, 'top100', null],
        'user' => [parent::class, 'user', null],
    ];

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"]);

        return $properties;
    }
}
