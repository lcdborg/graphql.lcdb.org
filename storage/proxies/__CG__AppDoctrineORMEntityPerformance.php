<?php

namespace DoctrineProxies\__CG__\App\Doctrine\ORM\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Performance extends \App\Doctrine\ORM\Entity\Performance implements \Doctrine\ORM\Proxy\InternalProxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as private;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
    }

    public function __load(): void
    {
        $this->initializeLazyObject();
    }
    

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'artist' => [parent::class, 'artist', null],
        "\0".parent::class."\0".'changeComment' => [parent::class, 'changeComment', null],
        "\0".parent::class."\0".'city' => [parent::class, 'city', null],
        "\0".parent::class."\0".'comment' => [parent::class, 'comment', null],
        "\0".parent::class."\0".'createdAt' => [parent::class, 'createdAt', null],
        "\0".parent::class."\0".'date' => [parent::class, 'date', null],
        "\0".parent::class."\0".'festival_lock' => [parent::class, 'festival_lock', null],
        "\0".parent::class."\0".'id' => [parent::class, 'id', null],
        "\0".parent::class."\0".'isCompilation' => [parent::class, 'isCompilation', null],
        "\0".parent::class."\0".'merge_lock' => [parent::class, 'merge_lock', null],
        "\0".parent::class."\0".'ref_festival' => [parent::class, 'ref_festival', null],
        "\0".parent::class."\0".'ref_venue' => [parent::class, 'ref_venue', null],
        "\0".parent::class."\0".'set1' => [parent::class, 'set1', null],
        "\0".parent::class."\0".'set2' => [parent::class, 'set2', null],
        "\0".parent::class."\0".'set3' => [parent::class, 'set3', null],
        "\0".parent::class."\0".'showsuserid' => [parent::class, 'showsuserid', null],
        "\0".parent::class."\0".'sources' => [parent::class, 'sources', null],
        "\0".parent::class."\0".'spotlight_date' => [parent::class, 'spotlight_date', null],
        "\0".parent::class."\0".'staffpick_date' => [parent::class, 'staffpick_date', null],
        "\0".parent::class."\0".'state' => [parent::class, 'state', null],
        "\0".parent::class."\0".'title' => [parent::class, 'title', null],
        "\0".parent::class."\0".'updatedAt' => [parent::class, 'updatedAt', null],
        "\0".parent::class."\0".'userPerformances' => [parent::class, 'userPerformances', null],
        "\0".parent::class."\0".'venue' => [parent::class, 'venue', null],
        "\0".parent::class."\0".'wantedUsers' => [parent::class, 'wantedUsers', null],
        "\0".parent::class."\0".'year' => [parent::class, 'year', null],
        'artist' => [parent::class, 'artist', null],
        'changeComment' => [parent::class, 'changeComment', null],
        'city' => [parent::class, 'city', null],
        'comment' => [parent::class, 'comment', null],
        'createdAt' => [parent::class, 'createdAt', null],
        'date' => [parent::class, 'date', null],
        'festival_lock' => [parent::class, 'festival_lock', null],
        'id' => [parent::class, 'id', null],
        'isCompilation' => [parent::class, 'isCompilation', null],
        'merge_lock' => [parent::class, 'merge_lock', null],
        'ref_festival' => [parent::class, 'ref_festival', null],
        'ref_venue' => [parent::class, 'ref_venue', null],
        'set1' => [parent::class, 'set1', null],
        'set2' => [parent::class, 'set2', null],
        'set3' => [parent::class, 'set3', null],
        'showsuserid' => [parent::class, 'showsuserid', null],
        'sources' => [parent::class, 'sources', null],
        'spotlight_date' => [parent::class, 'spotlight_date', null],
        'staffpick_date' => [parent::class, 'staffpick_date', null],
        'state' => [parent::class, 'state', null],
        'title' => [parent::class, 'title', null],
        'updatedAt' => [parent::class, 'updatedAt', null],
        'userPerformances' => [parent::class, 'userPerformances', null],
        'venue' => [parent::class, 'venue', null],
        'wantedUsers' => [parent::class, 'wantedUsers', null],
        'year' => [parent::class, 'year', null],
    ];

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"]);

        return $properties;
    }
}
